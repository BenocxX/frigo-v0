// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id
  username     String @unique
  passwordHash String
  role         String @default("user")

  sessions                 Session[]
  Passkey                  Passkey[]
  PasskeyCredentialOptions PasskeyCredentialOptions?
  Transaction              Transaction[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Passkey {
  id             String   @id @unique
  userId         String
  publicKey      Bytes
  webauthnUserID String   @unique
  counter        BigInt
  deviceType     String
  backedUp       Boolean
  transports     String[]

  name      String
  lastUsed  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([id], name: "passkey_id_index")
  @@index([userId], name: "passkey_user_id_index")
  @@index([webauthnUserID], name: "passkey_webauthn_user_id_index")
}

model PasskeyCredentialOptions {
  id          Int    @id @default(autoincrement())
  userId      String @unique
  optionsJson String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  price       Float
  Transaction Transaction[]
}

model Transaction {
  id        Int      @id @default(autoincrement())
  userId    String
  productId Int
  quantity  Int
  createdAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
